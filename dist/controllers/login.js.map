{"version":3,"sources":["../../src/controllers/login.js"],"names":["dotenv","config","login","req","res","email","body","findUserQuery","db","query","rows","token","jwt","sign","process","env","JWT_SECRET_KEY","expiresIn","status","json","data","user","error","detail"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEAA,gBAAOC,MAAP;;SAEeC,K;;;;;;;0BAAf,iBAAqBC,GAArB,EAA0BC,GAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,KADV,GACoBF,GAAG,CAACG,IADxB,CACUD,KADV;AAEQE,YAAAA,aAFR,8CAE4DF,KAF5D;AAAA;AAAA;AAAA,mBAK2BG,aAAGC,KAAH,CAASF,aAAT,CAL3B;;AAAA;AAAA;AAKYG,YAAAA,IALZ,QAKYA,IALZ;AAMUC,YAAAA,KANV,GAMkBC,sBAAIC,IAAJ,CAASH,IAAI,CAAC,CAAD,CAAb,EAAkBI,OAAO,CAACC,GAAR,CAAYC,cAA9B,EAA8C;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAA9C,CANlB;AAAA,6CAQWb,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,cAAAA,MAAM,EAAE,GADkB;AAE1BE,cAAAA,IAAI,EAAE,CAAC;AACLT,gBAAAA,KAAK,EAALA,KADK;AAELU,gBAAAA,IAAI,EAAEX,IAAI,CAAC,CAAD;AAFL,eAAD;AAFoB,aAArB,CARX;;AAAA;AAAA;AAAA;AAAA,6CAgBWN,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,cAAAA,MAAM,EAAE,GADkB;AAE1BI,cAAAA,KAAK,EAAE,YAAMC;AAFa,aAArB,CAhBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;eAuBerB,K","sourcesContent":["import dotenv from 'dotenv';\r\nimport jwt from 'jsonwebtoken';\r\nimport { db } from '../models/dbconfig';\r\n\r\ndotenv.config();\r\n\r\nasync function login(req, res) {\r\n  const { email } = req.body;\r\n  const findUserQuery = `SELECT * FROM users WHERE email='${email}'`;\r\n\r\n  try {\r\n    const { rows } = await db.query(findUserQuery);\r\n    const token = jwt.sign(rows[0], process.env.JWT_SECRET_KEY, { expiresIn: '24h' });\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [{\r\n        token,\r\n        user: rows[0],\r\n      }],\r\n    });\r\n  } catch (error) {\r\n    return res.status(422).json({\r\n      status: 422,\r\n      error: error.detail,\r\n    });\r\n  }\r\n}\r\n\r\nexport default login;\r\n"],"file":"login.js"}