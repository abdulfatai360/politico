{"version":3,"sources":["../../src/controllers/party.js"],"names":["Party","req","res","party","partyDb","create","body","status","json","data","findOne","Number","params","id","error","name","logoUrl","findAll","length","resSpec","map","fieldsToUpdate","Object","keys","update","response","delete"],"mappings":"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","sourcesContent":["import partyDb from '../models/party';\r\n\r\nclass Party {\r\n  static create(req, res) {\r\n    const party = partyDb.create(req.body);\r\n    return res.status(201).json({\r\n      status: 201,\r\n      data: [party],\r\n    });\r\n  }\r\n\r\n  static get(req, res) {\r\n    const party = partyDb.findOne(Number(req.params.id));\r\n\r\n    if (!party) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'Party not found in Database',\r\n      });\r\n    }\r\n\r\n    const { id, name, logoUrl } = party;\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [{ id, name, logoUrl }],\r\n    });\r\n  }\r\n\r\n  static getAll(req, res) {\r\n    if (!partyDb.findAll().length) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'No party in the Database',\r\n      });\r\n    }\r\n\r\n    const resSpec = partyDb.findAll()\r\n      .map(({ id, name, logoUrl }) => ({ id, name, logoUrl }));\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: resSpec,\r\n    });\r\n  }\r\n\r\n  static updateName(req, res) {\r\n    const fieldsToUpdate = Object.keys(req.body);\r\n    const id = Number(req.params.id);\r\n\r\n    if (fieldsToUpdate.length > 1) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Excess fields. Only name field can be updated',\r\n      });\r\n    }\r\n\r\n    const party = partyDb.findOne(id);\r\n\r\n    if (!party) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'Party not found in Database',\r\n      });\r\n    }\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [partyDb.update(id, req.body.name)],\r\n    });\r\n  }\r\n\r\n  static delete(req, res) {\r\n    const id = Number(req.params.id);\r\n\r\n    const party = partyDb.findOne(id);\r\n    if (!party) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'Party not found in Database',\r\n      });\r\n    }\r\n\r\n    const response = partyDb.delete(id);\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [response],\r\n    });\r\n  }\r\n}\r\n\r\nexport default Party;\r\n"],"file":"party.js"}