{"version":3,"sources":["../../src/controllers/party.js"],"names":["Party","req","res","body","name","hqAddress","logoUrl","status","json","error","allParties","partyDb","findAll","duplicate","find","elem","party","create","data","id","params","Number","isNaN","findOne","length","filter","map","Object","keys","update","response","delete"],"mappings":"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","sourcesContent":["import partyDb from '../models/party';\r\n\r\nclass Party {\r\n  static post(req, res) {\r\n    const { name, hqAddress, logoUrl } = req.body;\r\n\r\n    if (!name) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Party name is required',\r\n      });\r\n    }\r\n\r\n    if (!hqAddress) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Party address field is required',\r\n      });\r\n    }\r\n\r\n    if (!logoUrl) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Party logo field is required',\r\n      });\r\n    }\r\n\r\n    if (typeof name !== 'string') {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Party name is invalid',\r\n      });\r\n    }\r\n\r\n    if (typeof hqAddress !== 'string') {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Party address field is invalid',\r\n      });\r\n    }\r\n\r\n    if (typeof logoUrl !== 'string') {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Party logo field is invalid',\r\n      });\r\n    }\r\n\r\n    const allParties = partyDb.findAll();\r\n    const duplicate = allParties.find(elem => elem.name === name);\r\n    if (duplicate) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Party name already exist',\r\n      });\r\n    }\r\n\r\n    const party = partyDb.create(req.body);\r\n    return res.status(201).json({\r\n      status: 201,\r\n      data: [party],\r\n    });\r\n  }\r\n\r\n  static getParty(req, res) {\r\n    let { id } = req.params;\r\n    id = Number(id);\r\n\r\n    if (Number.isNaN(id)) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Party ID is invalid',\r\n      });\r\n    }\r\n\r\n    const party = partyDb.findOne(id);\r\n\r\n    if (!party) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'Party not found',\r\n      });\r\n    }\r\n\r\n    const { name, logoUrl } = party;\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [{ id, name, logoUrl }],\r\n    });\r\n  }\r\n\r\n  static getAllParties(req, res) {\r\n    if (!partyDb.findAll().length) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'No party in the Database',\r\n      });\r\n    }\r\n\r\n    const filter = partyDb.findAll()\r\n      .map(({ id, name, logoUrl }) => ({ id, name, logoUrl }));\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: filter,\r\n    });\r\n  }\r\n\r\n  static updatePartyName(req, res) {\r\n    if (!req.body.name) {\r\n      return res.status(400).json({\r\n        status: 400,\r\n        error: 'Name field must be supplied',\r\n      });\r\n    }\r\n\r\n    if (!req.params.id) {\r\n      return res.status(400).json({\r\n        status: 400,\r\n        error: 'Id parameter is missing',\r\n      });\r\n    }\r\n\r\n    if (!req.params.name) {\r\n      return res.status(400).json({\r\n        status: 400,\r\n        error: 'Name parameter is missing',\r\n      });\r\n    }\r\n\r\n    if (Number.isNaN(Number(req.params.id))) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Id parameter is invalid',\r\n      });\r\n    }\r\n\r\n    if (!Number.isNaN(Number(req.params.name))) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Name parameter is invalid',\r\n      });\r\n    }\r\n\r\n    if (Object.keys(req.params).length > 2 || Object.keys(req.body).length > 2) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Excess fields or parameters. Only name field can be edited',\r\n      });\r\n    }\r\n\r\n    if (Object.keys(req.params).length < 2 || Object.keys(req.body).length < 1) {\r\n      return res.status(400).json({\r\n        status: 400,\r\n        error: 'Inadequate parameters field submission',\r\n      });\r\n    }\r\n\r\n    const party = partyDb.findOne(Number(req.params.id));\r\n\r\n    if (!party) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'Party not found',\r\n      });\r\n    }\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [partyDb.update(Number(req.params.id), req.body.name)],\r\n    });\r\n  }\r\n\r\n  static deleteParty(req, res) {\r\n    let { id } = req.params;\r\n    id = Number(id);\r\n\r\n    if (Number.isNaN(id)) {\r\n      return res.status(422).json({\r\n        status: 422,\r\n        error: 'Party ID is invalid',\r\n      });\r\n    }\r\n\r\n    const party = partyDb.findOne(id);\r\n    if (!party) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'Party not found',\r\n      });\r\n    }\r\n\r\n    const response = partyDb.delete(id);\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [response],\r\n    });\r\n  }\r\n}\r\n\r\nexport default Party;\r\n"],"file":"party.js"}