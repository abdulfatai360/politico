{"version":3,"sources":["../src/index.js"],"names":["dotenv","config","app","process","env","JWT_SECRET_KEY","exit","use","express","json","partyRouter","officesRouter","signupRouter","loginRouter","registerRouter","all","req","res","status","error","port","PORT","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,gBAAOC,MAAP;;AACA,IAAMC,GAAG,GAAG,uBAAZ;;AAEA,IAAI,CAACC,OAAO,CAACC,GAAR,CAAYC,cAAjB,EAAiC;AAC/BF,EAAAA,OAAO,CAACG,IAAR,CAAa,CAAb;AACD;;AAEDJ,GAAG,CAACK,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AAEAP,GAAG,CAACK,GAAJ,CAAQ,iBAAR,EAA2BG,gBAA3B;AACAR,GAAG,CAACK,GAAJ,CAAQ,iBAAR,EAA2BI,gBAA3B;AACAT,GAAG,CAACK,GAAJ,CAAQ,qBAAR,EAA+BK,eAA/B;AACAV,GAAG,CAACK,GAAJ,CAAQ,oBAAR,EAA8BM,cAA9B;AACAX,GAAG,CAACK,GAAJ,CAAQ,gBAAR,EAA0BO,eAA1B;AAEAZ,GAAG,CAACa,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACnBS,IAAAA,MAAM,EAAE,GADW;AAEnBC,IAAAA,KAAK,EAAE;AAFY,GAArB;AAID,CALD;AAOA,IAAMC,IAAI,GAAGjB,OAAO,CAACC,GAAR,CAAYiB,IAAZ,IAAoB,IAAjC;AACAnB,GAAG,CAACoB,MAAJ,CAAWF,IAAX,EAAiB,YAAM;AACrBG,EAAAA,OAAO,CAACC,GAAR,mCAAuCJ,IAAvC;AACD,CAFD;eAIelB,G","sourcesContent":["import '@babel/polyfill';\r\nimport express from 'express';\r\nimport dotenv from 'dotenv';\r\nimport partyRouter from './routes/parties';\r\nimport officesRouter from './routes/offices';\r\nimport signupRouter from './routes/signup';\r\nimport loginRouter from './routes/login';\r\nimport registerRouter from './routes/office';\r\n\r\ndotenv.config();\r\nconst app = express();\r\n\r\nif (!process.env.JWT_SECRET_KEY) {\r\n  process.exit(1);\r\n}\r\n\r\napp.use(express.json());\r\n\r\napp.use('/api/v1/parties', partyRouter);\r\napp.use('/api/v1/offices', officesRouter);\r\napp.use('/api/v1/auth/signup', signupRouter);\r\napp.use('/api/v1/auth/login', loginRouter);\r\napp.use('/api/v1/office', registerRouter);\r\n\r\napp.all('/*', (req, res) => {\r\n  res.status(404).json({\r\n    status: 404,\r\n    error: 'Invalid request',\r\n  });\r\n});\r\n\r\nconst port = process.env.PORT || 3000;\r\napp.listen(port, () => {\r\n  console.log(`Server is ready at port ${port}`);\r\n});\r\n\r\nexport default app;\r\n"],"file":"index.js"}