{"version":3,"sources":["../src/index.js"],"names":["app","use","express","json","port","process","env","PORT","post","req","res","body","name","hqAddress","logoUrl","status","error","party","partyDb","data","get","id","params","Number","isNaN","getOne","getAll","length","filter","map","listen","console","log"],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport partyDb from './models/party';\r\n\r\nconst app = express();\r\napp.use(express.json());\r\nconst port = process.env.PORT || 3000;\r\n\r\n/* **** POST /api/v1/parties endpoint **** */\r\n\r\napp.post('/api/v1/parties', (req, res) => {\r\n  const { name, hqAddress, logoUrl } = req.body;\r\n\r\n  if (!name) {\r\n    return res.status(422).json({\r\n      status: 422,\r\n      error: 'Party name is required',\r\n    });\r\n  }\r\n\r\n  if (!hqAddress) {\r\n    return res.status(422).json({\r\n      status: 422,\r\n      error: 'Party address field is required',\r\n    });\r\n  }\r\n\r\n  if (!logoUrl) {\r\n    return res.status(422).json({\r\n      status: 422,\r\n      error: 'Party logo field is required',\r\n    });\r\n  }\r\n\r\n  if (typeof name !== 'string') {\r\n    return res.status(422).json({\r\n      status: 422,\r\n      error: 'Party name is invalid',\r\n    });\r\n  }\r\n\r\n  if (typeof hqAddress !== 'string') {\r\n    return res.status(422).json({\r\n      status: 422,\r\n      error: 'Party address field is invalid',\r\n    });\r\n  }\r\n\r\n  if (typeof logoUrl !== 'string') {\r\n    return res.status(422).json({\r\n      status: 422,\r\n      error: 'Party logo field is invalid',\r\n    });\r\n  }\r\n\r\n  const party = partyDb.post(req.body);\r\n  return res.status(201).json({\r\n    status: 201,\r\n    data: [party],\r\n  });\r\n});\r\n\r\n/* **** GET /api/v1/parties/<party-id> endpoint **** */\r\n\r\napp.get('/api/v1/parties/:id', (req, res) => {\r\n  let { id } = req.params;\r\n  id = Number(id);\r\n\r\n  if (Number.isNaN(id)) {\r\n    return res.status(422).json({\r\n      status: 422,\r\n      error: 'Party ID is invalid',\r\n    });\r\n  }\r\n\r\n  const party = partyDb.getOne(id);\r\n\r\n  if (!party) {\r\n    return res.status(404).json({\r\n      status: 404,\r\n      error: 'Party not found',\r\n    });\r\n  }\r\n\r\n  const { name, logoUrl } = party;\r\n  return res.status(200).json({\r\n    status: 200,\r\n    data: [{ id, name, logoUrl }],\r\n  });\r\n});\r\n\r\n/* **** GET /api/v1/parties endpoint **** */\r\n\r\napp.get('/api/v1/parties', (req, res) => {\r\n  if (!partyDb.getAll().length) {\r\n    return res.status(404).json({\r\n      status: 404,\r\n      error: 'No party in the Database',\r\n    });\r\n  }\r\n\r\n  const filter = partyDb.getAll()\r\n    .map(({ id, name, logoUrl }) => ({ id, name, logoUrl }));\r\n\r\n  return res.status(200).json({\r\n    status: 200,\r\n    data: filter,\r\n  });\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is ready at port ${port}`);\r\n});\r\n\r\nexport default app;\r\n"],"file":"index.js"}